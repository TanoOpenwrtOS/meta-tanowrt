From 5c51e55f5129903a2f8c08a23850284d49f4e3e3 Mon Sep 17 00:00:00 2001
From: Anton Kikin <a.kikin@tano-systems.com>
Date: Wed, 18 May 2022 07:33:07 +0300
Subject: [PATCH 1003/1013] rockchip: Fix build with disabled
 CONFIG_ROCKCHIP_RESOURCE_IMAGE

Signed-off-by: Anton Kikin <a.kikin@tano-systems.com>
---
 arch/arm/mach-rockchip/board.c      | 5 ++++-
 arch/arm/mach-rockchip/boot_rkimg.c | 2 ++
 arch/arm/mach-rockchip/fit.c        | 9 ++++++++-
 3 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-rockchip/board.c b/arch/arm/mach-rockchip/board.c
index 446b945..587f4fd 100644
--- a/arch/arm/mach-rockchip/board.c
+++ b/arch/arm/mach-rockchip/board.c
@@ -829,8 +829,11 @@ int bootm_image_populate_dtb(void *img)
 		sysmem_free((phys_addr_t)gd->fdt_blob);
 	else
 		gd->fdt_blob = (void *)env_get_ulong("fdt_addr_r", 16, 0);
-
+#ifdef CONFIG_ROCKCHIP_RESOURCE_IMAGE
 	return resource_populate_dtb(img, (void *)gd->fdt_blob);
+#else
+	return 0;
+#endif
 }
 
 /*
diff --git a/arch/arm/mach-rockchip/boot_rkimg.c b/arch/arm/mach-rockchip/boot_rkimg.c
index fb44f88..19c4db0 100644
--- a/arch/arm/mach-rockchip/boot_rkimg.c
+++ b/arch/arm/mach-rockchip/boot_rkimg.c
@@ -539,6 +539,7 @@ static int rockchip_read_distro_dtb(void *fdt_addr)
 
 int rockchip_read_dtb_file(void *fdt_addr)
 {
+#ifdef CONFIG_ROCKCHIP_RESOURCE_IMAGE
 	int hash_size = 0;
 	int ret = -1;
 	u32 fdt_size = 0;
@@ -588,6 +589,7 @@ int rockchip_read_dtb_file(void *fdt_addr)
 #if defined(CONFIG_ANDROID_BOOT_IMAGE) && defined(CONFIG_OF_LIBFDT_OVERLAY)
 	android_fdt_overlay_apply((void *)fdt_addr);
 #endif
+#endif /* CONFIG_ROCKCHIP_RESOURCE_IMAGE */
 
 	return 0;
 }
diff --git a/arch/arm/mach-rockchip/fit.c b/arch/arm/mach-rockchip/fit.c
index 1a2ac03..d3af18b 100644
--- a/arch/arm/mach-rockchip/fit.c
+++ b/arch/arm/mach-rockchip/fit.c
@@ -54,6 +54,8 @@ static int fit_sig_require_conf(const void *fit, const void *sig_blob)
 	return 0;
 }
 
+#ifdef CONFIG_ROCKCHIP_RESOURCE_IMAGE
+
 static int fit_image_get_subnode(const void *fit, int noffset, const char *name)
 {
 	int sub_noffset;
@@ -67,6 +69,8 @@ static int fit_image_get_subnode(const void *fit, int noffset, const char *name)
 	return -ENOENT;
 }
 
+#endif
+
 int fit_default_conf_get_node(const void *fit, const char *prop_name)
 {
 	int conf_noffset;
@@ -260,6 +264,8 @@ int fit_image_fail_process(const void *fit)
 	return 0;
 }
 
+#ifdef CONFIG_ROCKCHIP_RESOURCE_IMAGE
+
 static int fit_image_load_one(const void *fit, struct blk_desc *dev_desc,
 			      disk_partition_t *part, char *prop_name,
 			      void *data, int check_hash)
@@ -301,7 +307,6 @@ static int fit_image_load_one(const void *fit, struct blk_desc *dev_desc,
 	return 0;
 }
 
-#ifdef CONFIG_ROCKCHIP_RESOURCE_IMAGE
 static int fit_image_load_resource(const void *fit, struct blk_desc *dev_desc,
 				   disk_partition_t *part, ulong *addr)
 {
@@ -467,7 +472,9 @@ int fit_image_init_resource(void)
 #endif
 
 	fit_msg(fit);
+#ifdef CONFIG_ROCKCHIP_RESOURCE_IMAGE
 out:
+#endif
 	free(fit);
 
 	return ret;
-- 
2.34.1.windows.1

